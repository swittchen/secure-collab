
Table users {
  id uuid [pk, default: `gen_random_uuid()`]
  email varchar(255) [unique, not null]
  password_hash varchar(255)
  full_name varchar(255)
  auth_provider varchar(50) [not null, default: 'LOCAL']
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

Table workspaces {
  id uuid [pk, default: `gen_random_uuid()`]
  name varchar(255) [not null]
  description text
  created_by uuid [not null, ref: > users.id]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

Table workspace_memberships {
  id uuid [pk, default: `gen_random_uuid()`]
  workspace_id uuid [not null, ref: > workspaces.id]
  user_id uuid [not null, ref: > users.id]
  role varchar(20) [not null]
  joined_at timestamp [not null, default: `now()`]
  Note: "Unique combination of workspace and user"
}

Table invitations {
  id uuid [pk, default: `gen_random_uuid()`]
  workspace_id uuid [not null, ref: > workspaces.id]
  email varchar(255) [not null]
  role varchar(20) [not null]
  invited_by uuid [ref: > users.id]
  token varchar(255) [unique, not null]
  expires_at timestamp [not null]
  status varchar(20) [not null]
}

Table chat_messages {
  id uuid [pk, default: `gen_random_uuid()`]
  workspace_id uuid [not null, ref: > workspaces.id]
  sender_id uuid [not null, ref: > users.id]
  message text [not null]
  timestamp timestamp [not null, default: `now()`]
}

Table files {
  id uuid [pk, default: `gen_random_uuid()`]
  workspace_id uuid [not null, ref: > workspaces.id]
  uploaded_by_id uuid [ref: > users.id]
  filename varchar(255) [not null]
  storage_path text [not null]
  size bigint [not null]
  file_type varchar(50)
  uploaded_at timestamp [not null, default: `now()`]
}

Table audit_logs {
  id uuid [pk, default: `gen_random_uuid()`]
  user_id uuid [not null, ref: > users.id]
  workspace_id uuid [ref: > workspaces.id]
  action varchar(100) [not null]
  description text
  timestamp timestamp [not null, default: `now()`]
}

Table refresh_tokens {
  id uuid [pk, default: `gen_random_uuid()`]
  user_id uuid [not null, ref: > users.id]
  token varchar(512) [unique, not null]
  expires_at timestamp [not null]
}
